
[{"content":"","date":"18.10.2025","externalUrl":null,"permalink":"/tags/docker/","section":"Tags","summary":"","title":"Docker","type":"tags"},{"content":"","date":"18.10.2025","externalUrl":null,"permalink":"/docker/","section":"Dockers","summary":"","title":"Dockers","type":"docker"},{"content":"","date":"18.10.2025","externalUrl":null,"permalink":"/tags/homelab/","section":"Tags","summary":"","title":"Homelab","type":"tags"},{"content":"","date":"18.10.2025","externalUrl":null,"permalink":"/","section":"MacVilles Blog","summary":"","title":"MacVilles Blog","type":"page"},{"content":" #!/bin/bash # === Laufzeit-Variablen === varRunTime=$(date +%Y%m%d_%H%M%S) varDaysOlder=7 LOG_DIR=\u0026#34;/mnt/user/Backup/paperless/logs\u0026#34; LOG_FILE=\u0026#34;${LOG_DIR}/paperless-backup_${varRunTime}.log\u0026#34; # === Environment fix f√ºr Cron === export PATH=\u0026#34;/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\u0026#34; export LANG=\u0026#34;C\u0026#34; # === Verzeichnisse === BACKUP_DIR=\u0026#34;/mnt/user/Backup/paperless\u0026#34; CONTAINER=\u0026#34;paperless-ngx\u0026#34; # === Logging-Verzeichnis sicherstellen === mkdir -p \u0026#34;$LOG_DIR\u0026#34; { echo \u0026#34;+++++++++ $(date +%Y%m%d_%H%M%S) - paperless Backup-Script gestartet +++++++++\u0026#34; echo echo \u0026#34;+++++++++ $(date +%Y%m%d_%H%M%S) - L√∂sche Backups √§lter als ${varDaysOlder} Tage +++++++++\u0026#34; find \u0026#34;$BACKUP_DIR\u0026#34; -type f -name \u0026#39;*.zip\u0026#39; -mtime +$varDaysOlder -print find \u0026#34;$BACKUP_DIR\u0026#34; -type f -name \u0026#39;*.zip\u0026#39; -mtime +$varDaysOlder -exec rm -v {} \\; echo echo \u0026#34;+++++++++ $(date +%Y%m%d_%H%M%S) - L√∂sche Logs √§lter als ${varDaysOlder} Tage +++++++++\u0026#34; find \u0026#34;$LOG_DIR\u0026#34; -type f -name \u0026#39;*.log\u0026#39; -mtime +$varDaysOlder -print find \u0026#34;$LOG_DIR\u0026#34; -type f -name \u0026#39;*.log\u0026#39; -mtime +$varDaysOlder -exec rm -v {} \\; echo echo \u0026#34;+++++ $(date +%Y%m%d_%H%M%S) - paperless Export gestartet +++++\u0026#34; docker exec -t \u0026#34;$CONTAINER\u0026#34; document_exporter ../export \\ --delete --compare-checksums --zip --zip-name ../backup/paperless-backup_${varRunTime} echo echo \u0026#34;+++++ $(date +%Y%m%d_%H%M%S) - paperless Export beendet +++++\u0026#34; echo \u0026#34;+++++++++ $(date +%Y%m%d_%H%M%S) - paperless Backup-Script beendet +++++++++\u0026#34; echo } \u0026gt;\u0026gt; \u0026#34;$LOG_FILE\u0026#34; 2\u0026gt;\u0026amp;1 ","date":"18.10.2025","externalUrl":null,"permalink":"/docker/paperless-ngx-backup/","section":"Dockers","summary":"","title":"Paperless Ngx Backup","type":"docker"},{"content":"","date":"18.10.2025","externalUrl":null,"permalink":"/tags/paperless-ngx/","section":"Tags","summary":"","title":"Paperless-Ngx","type":"tags"},{"content":"","date":"18.10.2025","externalUrl":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags","type":"tags"},{"content":"Vaultwarden ist eine schlanke, selbst gehostete Alternative zu Bitwarden ‚Äì perfekt f√ºr alle, die ihre Passw√∂rter lieber selbst unter Kontrolle haben.\nAber: Wer selbst hostet, tr√§gt auch selbst Verantwortung. Wenn deine Datenbank oder dein Container hopsgeht, ist dein Tresor futsch.\nUnd genau deshalb braucht dein Vaultwarden ein sauberes Backup.\nIn diesem Beitrag zeige ich dir, wie du ein automatisiertes Backup deiner Vaultwarden-Daten auf deinem Unraid-System einrichtest ‚Äì mit einem simplen, aber effektiven Bash-Skript.\nüß© Warum du Vaultwarden unbedingt sichern solltest # Vaultwarden speichert:\ndeine komplette Passwortdatenbank (SQLite oder PostgreSQL) Konfigurationen, Zertifikate und Icons 2FA-Daten (falls du OTP nutzt) All das liegt im Docker-Volume unter /mnt/user/appdata/vaultwarden.\nWenn deine SSD stirbt oder ein Update fehlschl√§gt, sind diese Daten ohne Backup unwiederbringlich verloren.\nüí° Merksatz: Kein Backup = kein Mitleid.\nüß∞ Voraussetzungen # Unraid-Server mit Docker Vaultwarden als Container installiert Zugriff auf die Unraid-Konsole oder SSH Basiswissen in Bash ‚öôÔ∏è Das Backup-Skript # Erstelle auf deinem Unraid-Server ein neues Skript, z. B. unter:\n/boot/config/plugins/user.scripts/scripts/vaultwarden_backup/script\nF√ºge folgenden Inhalt ein:\n#!/bin/bash # Vaultwarden Backup Script for Unraid (Docker) # Autor: Stefan / DockerCraft # === Konfiguration === BACKUP_DIR=\u0026#34;/mnt/user/backups/vaultwarden\u0026#34; CONTAINER_NAME=\u0026#34;vaultwarden\u0026#34; DATE=$(date +\u0026#34;%Y-%m-%d_%H-%M-%S\u0026#34;) ARCHIVE_NAME=\u0026#34;vaultwarden_backup_$DATE.tar.gz\u0026#34; # === Container stoppen === echo \u0026#34;üì¶ Stoppe Vaultwarden Container...\u0026#34; docker stop $CONTAINER_NAME # === Backup erstellen === echo \u0026#34;üìÇ Erstelle Backup...\u0026#34; mkdir -p \u0026#34;$BACKUP_DIR\u0026#34; tar -czvf \u0026#34;$BACKUP_DIR/$ARCHIVE_NAME\u0026#34; /mnt/user/appdata/vaultwarden # === Container wieder starten === echo \u0026#34;üöÄ Starte Vaultwarden Container...\u0026#34; docker start $CONTAINER_NAME # === Alte Backups l√∂schen (optional) === find \u0026#34;$BACKUP_DIR\u0026#34; -type f -mtime +7 -name \u0026#34;*.tar.gz\u0026#34; -exec rm {} \\; echo \u0026#34;‚úÖ Backup abgeschlossen: $ARCHIVE_NAME\u0026#34; Mach die Datei ausf√ºhrbar:\nchmod +x /boot/config/plugins/user.scripts/scripts/vaultwarden_backup/script üß† Wie das Script funktioniert # Container stoppen ‚Äì Verhindert, dass w√§hrend des Backups Schreibzugriffe auf die Datenbank passieren. Daten sichern ‚Äì Alle wichtigen Dateien aus /mnt/user/appdata/vaultwarden werden in ein komprimiertes .tar.gz gepackt. Container neu starten ‚Äì Vaultwarden l√§uft danach wieder ganz normal. Alte Backups l√∂schen ‚Äì Automatisch werden alle Backups, die √§lter als 7 Tage sind, entfernt. üïí Automatisierung in Unraid # Damit du nicht jedes Mal manuell sichern musst, kannst du das Ganze mit dem User Scripts Plugin automatisieren:\n√ñffne das Plugin User Scripts in Unraid. W√§hle das Script vaultwarden_backup. Stelle die Ausf√ºhrung z. B. t√§glich um 3 Uhr nachts ein. So l√§uft dein Backup vollautomatisch im Hintergrund ‚Äì ohne manuelles Eingreifen.\n‚òÅÔ∏è Bonus-Tipp: Offsite-Backup # Ein Backup auf dem gleichen Server hilft dir nicht, wenn die Kiste abbrennt oder die Platte stirbt.\nDeshalb empfehle ich zus√§tzlich:\nRclone ‚Üí f√ºr automatischen Upload zu Google Drive, Dropbox oder OneDrive rsync √ºber SSH ‚Üí um Backups auf ein NAS oder einen anderen Server zu spiegeln Externes USB-Laufwerk ‚Üí f√ºr manuelles, aber physisch getrenntes Backup Beispiel mit Rclone:\nrclone copy /mnt/user/backups/vaultwarden remote:unraid_backups/vaultwarden --progress üîÅ Restore: So stellst du Vaultwarden aus dem Backup wieder her # Ein Backup ist nur so gut wie seine Wiederherstellung.\nAlso testen wir, ob du im Notfall auch wirklich wieder an deine Daten kommst.\nüì¶ Schritt-f√ºr-Schritt Anleitung # Vaultwarden-Container stoppen\ndocker stop vaultwarden Backup ausw√§hlen und entpacken\ncd /mnt/user/backups/vaultwarden ls -lh tar -xzvf vaultwarden_backup_YYYY-MM-DD_HH-MM-SS.tar.gz -C / üîé Tipp: Das Archiv enth√§lt /mnt/user/appdata/vaultwarden.\nBeim Entpacken nach / werden also die originalen Vaultwarden-Daten wiederhergestellt.\nDateirechte pr√ºfen\nchown -R nobody:users /mnt/user/appdata/vaultwarden chmod -R 770 /mnt/user/appdata/vaultwarden Container starten\ndocker start vaultwarden Testlauf machen\n√ñffne deine Vaultwarden-Weboberfl√§che und pr√ºfe, ob alle Logins, Sammlungen und Anh√§nge verf√ºgbar sind.\nüß† Tipp f√ºr Fortgeschrittene # Wenn du dein Backup lieber manuell pr√ºfen m√∂chtest, ohne gleich alles zu √ºberschreiben:\nmkdir /mnt/user/temp/vaultwarden_restore_test tar -xzvf vaultwarden_backup_YYYY-MM-DD_HH-MM-SS.tar.gz -C /mnt/user/temp/vaultwarden_restore_test So kannst du vorher reinschauen, was im Archiv steckt, bevor du etwas √ºberschreibst.\nüö® Wiederherstellung testen! # Viele Admins machen den Fehler, Backups nie zu testen.\nEinmal im Quartal solltest du in einer sicheren Umgebung (z. B. Test-VM oder Backup-Unraid-Server) die Wiederherstellung durchspielen.\nNur so wei√üt du, dass dein Backup wirklich funktioniert ‚Äì bevor es zu sp√§t ist.\n‚úÖ Fazit # Mit dem zus√§tzlichen Restore-Teil ist dein Vaultwarden-Backup nun vollst√§ndig abgesichert:\nAutomatische, versionierte Backups Alte Sicherungen werden bereinigt Restore ist sauber dokumentiert Optionaler Offsite-Sync f√ºr maximale Sicherheit Damit hast du dein Passwort-Manager-System auf Unraid nicht nur selbst in der Hand ‚Äì sondern auch unter Kontrolle, wenn mal was schiefgeht. üí™\nüîí Selbst gehostet ist cool. Aber erst mit Backup ist es wirklich sicher.\n","date":"18.10.2025","externalUrl":null,"permalink":"/docker/vaultwarden-backup/","section":"Dockers","summary":"","title":"Vaultwarden Backup","type":"docker"},{"content":"","date":"18.10.2025","externalUrl":null,"permalink":"/smarthome/mein-smarthome/","section":"Smarthomes","summary":"","title":"Mein SmartHome","type":"smarthome"},{"content":"","date":"18.10.2025","externalUrl":null,"permalink":"/tags/smarthome/","section":"Tags","summary":"","title":"Smarthome","type":"tags"},{"content":"","date":"18.10.2025","externalUrl":null,"permalink":"/smarthome/","section":"Smarthomes","summary":"","title":"Smarthomes","type":"smarthome"},{"content":"","date":"18.10.2025","externalUrl":null,"permalink":"/docker/meine-docker-container/","section":"Dockers","summary":"","title":"Meine Docker Container","type":"docker"},{"content":"","date":"18.10.2025","externalUrl":null,"permalink":"/homelab/","section":"Homelabs","summary":"","title":"Homelabs","type":"homelab"},{"content":"","externalUrl":null,"permalink":"/authors/","section":"Authors","summary":"","title":"Authors","type":"authors"},{"content":"","externalUrl":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories","type":"categories"},{"content":"","externalUrl":null,"permalink":"/series/","section":"Series","summary":"","title":"Series","type":"series"}]